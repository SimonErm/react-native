// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`GeneratePropsKotlinInterface can generate fixture ARRAY_PROPS 1`] = `
Map {
  "ArrayPropsNativeComponentManagerInterface.kt" => "/**
* Copyright (c) Facebook, Inc. and its affiliates.
*
* This source code is licensed under the MIT license found in the
* LICENSE file in the root directory of this source tree.
*
* @generated by codegen project: GeneratePropsKotlinInterface.js
*/

package com.facebook.react.viewmanagers;

import android.view.View;
import com.facebook.react.bridge.ReadableArray;

public interface ArrayPropsNativeComponentManagerInterface<T: View> {
  fun setNames(view: T, value: ReadableArray?);
  fun setDisableds(view: T, value: ReadableArray?);
  fun setProgress(view: T, value: ReadableArray?);
  fun setRadii(view: T, value: ReadableArray?);
  fun setColors(view: T, value: ReadableArray?);
  fun setSrcs(view: T, value: ReadableArray?);
  fun setPoints(view: T, value: ReadableArray?);
  fun setSizes(view: T, value: ReadableArray?);
  fun setObject(view: T, value: ReadableArray?);
  fun setArray(view: T, value: ReadableArray?);
  fun setArrayOfArrayOfObject(view: T, value: ReadableArray?);
}
",
}
`;

exports[`GeneratePropsKotlinInterface can generate fixture ARRAY_PROPS_WITH_NESTED_OBJECT 1`] = `
Map {
  "ArrayPropsNativeComponentManagerInterface.kt" => "/**
* Copyright (c) Facebook, Inc. and its affiliates.
*
* This source code is licensed under the MIT license found in the
* LICENSE file in the root directory of this source tree.
*
* @generated by codegen project: GeneratePropsKotlinInterface.js
*/

package com.facebook.react.viewmanagers;

import android.view.View;
import com.facebook.react.bridge.ReadableArray;

public interface ArrayPropsNativeComponentManagerInterface<T: View> {
  fun setNativePrimitives(view: T, value: ReadableArray?);
}
",
}
`;

exports[`GeneratePropsKotlinInterface can generate fixture BOOLEAN_PROP 1`] = `
Map {
  "BooleanPropNativeComponentManagerInterface.kt" => "/**
* Copyright (c) Facebook, Inc. and its affiliates.
*
* This source code is licensed under the MIT license found in the
* LICENSE file in the root directory of this source tree.
*
* @generated by codegen project: GeneratePropsKotlinInterface.js
*/

package com.facebook.react.viewmanagers;

import android.view.View;

public interface BooleanPropNativeComponentManagerInterface<T: View> {
  fun setDisabled(view: T, value: Boolean);
}
",
}
`;

exports[`GeneratePropsKotlinInterface can generate fixture COLOR_PROP 1`] = `
Map {
  "ColorPropNativeComponentManagerInterface.kt" => "/**
* Copyright (c) Facebook, Inc. and its affiliates.
*
* This source code is licensed under the MIT license found in the
* LICENSE file in the root directory of this source tree.
*
* @generated by codegen project: GeneratePropsKotlinInterface.js
*/

package com.facebook.react.viewmanagers;

import android.view.View;

public interface ColorPropNativeComponentManagerInterface<T: View> {
  fun setTintColor(view: T, value: Int?);
}
",
}
`;

exports[`GeneratePropsKotlinInterface can generate fixture COMMANDS 1`] = `
Map {
  "CommandNativeComponentManagerInterface.kt" => "/**
* Copyright (c) Facebook, Inc. and its affiliates.
*
* This source code is licensed under the MIT license found in the
* LICENSE file in the root directory of this source tree.
*
* @generated by codegen project: GeneratePropsKotlinInterface.js
*/

package com.facebook.react.viewmanagers;

import android.view.View;

public interface CommandNativeComponentManagerInterface<T: View> {
  // No props
  fun flashScrollIndicators(view: T);
  fun allTypes(view: T, Int x, Float y, Double z, String message, Boolean animated);
}
",
}
`;

exports[`GeneratePropsKotlinInterface can generate fixture COMMANDS_AND_PROPS 1`] = `
Map {
  "CommandNativeComponentManagerInterface.kt" => "/**
* Copyright (c) Facebook, Inc. and its affiliates.
*
* This source code is licensed under the MIT license found in the
* LICENSE file in the root directory of this source tree.
*
* @generated by codegen project: GeneratePropsKotlinInterface.js
*/

package com.facebook.react.viewmanagers;

import android.view.View;

public interface CommandNativeComponentManagerInterface<T: View> {
  fun setAccessibilityHint(view: T, value: String?);
  fun handleRootTag(view: T, Double rootTag);
  fun hotspotUpdate(view: T, Int x, Int y);
}
",
}
`;

exports[`GeneratePropsKotlinInterface can generate fixture DOUBLE_PROPS 1`] = `
Map {
  "DoublePropNativeComponentManagerInterface.kt" => "/**
* Copyright (c) Facebook, Inc. and its affiliates.
*
* This source code is licensed under the MIT license found in the
* LICENSE file in the root directory of this source tree.
*
* @generated by codegen project: GeneratePropsKotlinInterface.js
*/

package com.facebook.react.viewmanagers;

import android.view.View;

public interface DoublePropNativeComponentManagerInterface<T: View> {
  fun setBlurRadius(view: T, value: Double);
  fun setBlurRadius2(view: T, value: Double);
  fun setBlurRadius3(view: T, value: Double);
  fun setBlurRadius4(view: T, value: Double);
  fun setBlurRadius5(view: T, value: Double);
  fun setBlurRadius6(view: T, value: Double);
}
",
}
`;

exports[`GeneratePropsKotlinInterface can generate fixture EVENT_NESTED_OBJECT_PROPS 1`] = `
Map {
  "EventsNestedObjectNativeComponentManagerInterface.kt" => "/**
* Copyright (c) Facebook, Inc. and its affiliates.
*
* This source code is licensed under the MIT license found in the
* LICENSE file in the root directory of this source tree.
*
* @generated by codegen project: GeneratePropsKotlinInterface.js
*/

package com.facebook.react.viewmanagers;

import android.view.View;

public interface EventsNestedObjectNativeComponentManagerInterface<T: View> {
  fun setDisabled(view: T, value: Boolean);
}
",
}
`;

exports[`GeneratePropsKotlinInterface can generate fixture EVENT_PROPS 1`] = `
Map {
  "EventsNativeComponentManagerInterface.kt" => "/**
* Copyright (c) Facebook, Inc. and its affiliates.
*
* This source code is licensed under the MIT license found in the
* LICENSE file in the root directory of this source tree.
*
* @generated by codegen project: GeneratePropsKotlinInterface.js
*/

package com.facebook.react.viewmanagers;

import android.view.View;

public interface EventsNativeComponentManagerInterface<T: View> {
  fun setDisabled(view: T, value: Boolean);
}
",
}
`;

exports[`GeneratePropsKotlinInterface can generate fixture EVENTS_WITH_PAPER_NAME 1`] = `
Map {
  "InterfaceOnlyComponentManagerInterface.kt" => "/**
* Copyright (c) Facebook, Inc. and its affiliates.
*
* This source code is licensed under the MIT license found in the
* LICENSE file in the root directory of this source tree.
*
* @generated by codegen project: GeneratePropsKotlinInterface.js
*/

package com.facebook.react.viewmanagers;

import android.view.View;

public interface InterfaceOnlyComponentManagerInterface<T: View> {
  // No props
}
",
}
`;

exports[`GeneratePropsKotlinInterface can generate fixture EXCLUDE_ANDROID 1`] = `Map {}`;

exports[`GeneratePropsKotlinInterface can generate fixture EXCLUDE_ANDROID_IOS 1`] = `Map {}`;

exports[`GeneratePropsKotlinInterface can generate fixture FLOAT_PROPS 1`] = `
Map {
  "FloatPropNativeComponentManagerInterface.kt" => "/**
* Copyright (c) Facebook, Inc. and its affiliates.
*
* This source code is licensed under the MIT license found in the
* LICENSE file in the root directory of this source tree.
*
* @generated by codegen project: GeneratePropsKotlinInterface.js
*/

package com.facebook.react.viewmanagers;

import android.view.View;

public interface FloatPropNativeComponentManagerInterface<T: View> {
  fun setBlurRadius(view: T, value: Float);
  fun setBlurRadius2(view: T, value: Float);
  fun setBlurRadius3(view: T, value: Float);
  fun setBlurRadius4(view: T, value: Float);
  fun setBlurRadius5(view: T, value: Float);
  fun setBlurRadius6(view: T, value: Float);
}
",
}
`;

exports[`GeneratePropsKotlinInterface can generate fixture IMAGE_PROP 1`] = `
Map {
  "ImagePropNativeComponentManagerInterface.kt" => "/**
* Copyright (c) Facebook, Inc. and its affiliates.
*
* This source code is licensed under the MIT license found in the
* LICENSE file in the root directory of this source tree.
*
* @generated by codegen project: GeneratePropsKotlinInterface.js
*/

package com.facebook.react.viewmanagers;

import android.view.View;
import com.facebook.react.bridge.ReadableMap;

public interface ImagePropNativeComponentManagerInterface<T: View> {
  fun setThumbImage(view: T, value: ReadableMap?);
}
",
}
`;

exports[`GeneratePropsKotlinInterface can generate fixture INSETS_PROP 1`] = `
Map {
  "InsetsPropNativeComponentManagerInterface.kt" => "/**
* Copyright (c) Facebook, Inc. and its affiliates.
*
* This source code is licensed under the MIT license found in the
* LICENSE file in the root directory of this source tree.
*
* @generated by codegen project: GeneratePropsKotlinInterface.js
*/

package com.facebook.react.viewmanagers;

import android.view.View;
import com.facebook.react.bridge.ReadableMap;

public interface InsetsPropNativeComponentManagerInterface<T: View> {
  fun setContentInset(view: T, value: ReadableMap?);
}
",
}
`;

exports[`GeneratePropsKotlinInterface can generate fixture INT32_ENUM_PROP 1`] = `
Map {
  "Int32EnumPropsNativeComponentManagerInterface.kt" => "/**
* Copyright (c) Facebook, Inc. and its affiliates.
*
* This source code is licensed under the MIT license found in the
* LICENSE file in the root directory of this source tree.
*
* @generated by codegen project: GeneratePropsKotlinInterface.js
*/

package com.facebook.react.viewmanagers;

import android.view.View;

public interface Int32EnumPropsNativeComponentManagerInterface<T: View> {
  fun setMaxInterval(view: T, value: Int?);
}
",
}
`;

exports[`GeneratePropsKotlinInterface can generate fixture INTEGER_PROPS 1`] = `
Map {
  "IntegerPropNativeComponentManagerInterface.kt" => "/**
* Copyright (c) Facebook, Inc. and its affiliates.
*
* This source code is licensed under the MIT license found in the
* LICENSE file in the root directory of this source tree.
*
* @generated by codegen project: GeneratePropsKotlinInterface.js
*/

package com.facebook.react.viewmanagers;

import android.view.View;

public interface IntegerPropNativeComponentManagerInterface<T: View> {
  fun setProgress1(view: T, value: Int);
  fun setProgress2(view: T, value: Int);
  fun setProgress3(view: T, value: Int);
}
",
}
`;

exports[`GeneratePropsKotlinInterface can generate fixture INTERFACE_ONLY 1`] = `
Map {
  "InterfaceOnlyComponentManagerInterface.kt" => "/**
* Copyright (c) Facebook, Inc. and its affiliates.
*
* This source code is licensed under the MIT license found in the
* LICENSE file in the root directory of this source tree.
*
* @generated by codegen project: GeneratePropsKotlinInterface.js
*/

package com.facebook.react.viewmanagers;

import android.view.View;

public interface InterfaceOnlyComponentManagerInterface<T: View> {
  fun setAccessibilityHint(view: T, value: String?);
}
",
}
`;

exports[`GeneratePropsKotlinInterface can generate fixture MULTI_NATIVE_PROP 1`] = `
Map {
  "ImageColorPropNativeComponentManagerInterface.kt" => "/**
* Copyright (c) Facebook, Inc. and its affiliates.
*
* This source code is licensed under the MIT license found in the
* LICENSE file in the root directory of this source tree.
*
* @generated by codegen project: GeneratePropsKotlinInterface.js
*/

package com.facebook.react.viewmanagers;

import android.view.View;
import com.facebook.react.bridge.ReadableMap;

public interface ImageColorPropNativeComponentManagerInterface<T: View> {
  fun setThumbImage(view: T, value: ReadableMap?);
  fun setColor(view: T, value: Int?);
  fun setThumbTintColor(view: T, value: Int?);
  fun setPoint(view: T, value: ReadableMap?);
}
",
}
`;

exports[`GeneratePropsKotlinInterface can generate fixture NO_PROPS_NO_EVENTS 1`] = `
Map {
  "NoPropsNoEventsComponentManagerInterface.kt" => "/**
* Copyright (c) Facebook, Inc. and its affiliates.
*
* This source code is licensed under the MIT license found in the
* LICENSE file in the root directory of this source tree.
*
* @generated by codegen project: GeneratePropsKotlinInterface.js
*/

package com.facebook.react.viewmanagers;

import android.view.View;

public interface NoPropsNoEventsComponentManagerInterface<T: View> {
  // No props
}
",
}
`;

exports[`GeneratePropsKotlinInterface can generate fixture OBJECT_PROPS 1`] = `
Map {
  "ObjectPropsManagerInterface.kt" => "/**
* Copyright (c) Facebook, Inc. and its affiliates.
*
* This source code is licensed under the MIT license found in the
* LICENSE file in the root directory of this source tree.
*
* @generated by codegen project: GeneratePropsKotlinInterface.js
*/

package com.facebook.react.viewmanagers;

import android.view.View;
import com.facebook.react.bridge.ReadableMap;

public interface ObjectPropsManagerInterface<T: View> {
  fun setObjectProp(view: T, value: ReadableMap?);
}
",
}
`;

exports[`GeneratePropsKotlinInterface can generate fixture POINT_PROP 1`] = `
Map {
  "PointPropNativeComponentManagerInterface.kt" => "/**
* Copyright (c) Facebook, Inc. and its affiliates.
*
* This source code is licensed under the MIT license found in the
* LICENSE file in the root directory of this source tree.
*
* @generated by codegen project: GeneratePropsKotlinInterface.js
*/

package com.facebook.react.viewmanagers;

import android.view.View;
import com.facebook.react.bridge.ReadableMap;

public interface PointPropNativeComponentManagerInterface<T: View> {
  fun setStartPoint(view: T, value: ReadableMap?);
}
",
}
`;

exports[`GeneratePropsKotlinInterface can generate fixture STRING_ENUM_PROP 1`] = `
Map {
  "StringEnumPropsNativeComponentManagerInterface.kt" => "/**
* Copyright (c) Facebook, Inc. and its affiliates.
*
* This source code is licensed under the MIT license found in the
* LICENSE file in the root directory of this source tree.
*
* @generated by codegen project: GeneratePropsKotlinInterface.js
*/

package com.facebook.react.viewmanagers;

import android.view.View;

public interface StringEnumPropsNativeComponentManagerInterface<T: View> {
  fun setAlignment(view: T, value: String);
}
",
}
`;

exports[`GeneratePropsKotlinInterface can generate fixture STRING_PROP 1`] = `
Map {
  "StringPropComponentManagerInterface.kt" => "/**
* Copyright (c) Facebook, Inc. and its affiliates.
*
* This source code is licensed under the MIT license found in the
* LICENSE file in the root directory of this source tree.
*
* @generated by codegen project: GeneratePropsKotlinInterface.js
*/

package com.facebook.react.viewmanagers;

import android.view.View;

public interface StringPropComponentManagerInterface<T: View> {
  fun setAccessibilityHint(view: T, value: String?);
  fun setAccessibilityRole(view: T, value: String?);
}
",
}
`;

exports[`GeneratePropsKotlinInterface can generate fixture TWO_COMPONENTS_DIFFERENT_FILES 1`] = `
Map {
  "MultiFile1NativeComponentManagerInterface.kt" => "/**
* Copyright (c) Facebook, Inc. and its affiliates.
*
* This source code is licensed under the MIT license found in the
* LICENSE file in the root directory of this source tree.
*
* @generated by codegen project: GeneratePropsKotlinInterface.js
*/

package com.facebook.react.viewmanagers;

import android.view.View;

public interface MultiFile1NativeComponentManagerInterface<T: View> {
  fun setDisabled(view: T, value: Boolean);
}
",
  "MultiFile2NativeComponentManagerInterface.kt" => "/**
* Copyright (c) Facebook, Inc. and its affiliates.
*
* This source code is licensed under the MIT license found in the
* LICENSE file in the root directory of this source tree.
*
* @generated by codegen project: GeneratePropsKotlinInterface.js
*/

package com.facebook.react.viewmanagers;

import android.view.View;

public interface MultiFile2NativeComponentManagerInterface<T: View> {
  fun setDisabled(view: T, value: Boolean);
}
",
}
`;

exports[`GeneratePropsKotlinInterface can generate fixture TWO_COMPONENTS_SAME_FILE 1`] = `
Map {
  "MultiComponent1NativeComponentManagerInterface.kt" => "/**
* Copyright (c) Facebook, Inc. and its affiliates.
*
* This source code is licensed under the MIT license found in the
* LICENSE file in the root directory of this source tree.
*
* @generated by codegen project: GeneratePropsKotlinInterface.js
*/

package com.facebook.react.viewmanagers;

import android.view.View;

public interface MultiComponent1NativeComponentManagerInterface<T: View> {
  fun setDisabled(view: T, value: Boolean);
}
",
  "MultiComponent2NativeComponentManagerInterface.kt" => "/**
* Copyright (c) Facebook, Inc. and its affiliates.
*
* This source code is licensed under the MIT license found in the
* LICENSE file in the root directory of this source tree.
*
* @generated by codegen project: GeneratePropsKotlinInterface.js
*/

package com.facebook.react.viewmanagers;

import android.view.View;

public interface MultiComponent2NativeComponentManagerInterface<T: View> {
  fun setDisabled(view: T, value: Boolean);
}
",
}
`;
